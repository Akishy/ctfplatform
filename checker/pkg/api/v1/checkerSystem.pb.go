// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: checkerSystem.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to register a new checker
type RegisterCheckerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeArchive string `protobuf:"bytes,1,opt,name=code_archive,json=codeArchive,proto3" json:"code_archive,omitempty"`
}

func (x *RegisterCheckerRequest) Reset() {
	*x = RegisterCheckerRequest{}
	mi := &file_checkerSystem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterCheckerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCheckerRequest) ProtoMessage() {}

func (x *RegisterCheckerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCheckerRequest.ProtoReflect.Descriptor instead.
func (*RegisterCheckerRequest) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterCheckerRequest) GetCodeArchive() string {
	if x != nil {
		return x.CodeArchive
	}
	return ""
}

// Response after registrating checker
type RegisterCheckerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // UUID of the created checker
}

func (x *RegisterCheckerResponse) Reset() {
	*x = RegisterCheckerResponse{}
	mi := &file_checkerSystem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterCheckerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCheckerResponse) ProtoMessage() {}

func (x *RegisterCheckerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCheckerResponse.ProtoReflect.Descriptor instead.
func (*RegisterCheckerResponse) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterCheckerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to check the status of a checker
type PingCheckerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // UUID of the checker
}

func (x *PingCheckerRequest) Reset() {
	*x = PingCheckerRequest{}
	mi := &file_checkerSystem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingCheckerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingCheckerRequest) ProtoMessage() {}

func (x *PingCheckerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingCheckerRequest.ProtoReflect.Descriptor instead.
func (*PingCheckerRequest) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{2}
}

func (x *PingCheckerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response for the Ping endpoint
type PingCheckerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message           string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Status message or additional information
	VulnServicesInfos []*VulnServiceInfo `protobuf:"bytes,2,rep,name=VulnServicesInfos,proto3" json:"VulnServicesInfos,omitempty"`
}

func (x *PingCheckerResponse) Reset() {
	*x = PingCheckerResponse{}
	mi := &file_checkerSystem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingCheckerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingCheckerResponse) ProtoMessage() {}

func (x *PingCheckerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingCheckerResponse.ProtoReflect.Descriptor instead.
func (*PingCheckerResponse) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{3}
}

func (x *PingCheckerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PingCheckerResponse) GetVulnServicesInfos() []*VulnServiceInfo {
	if x != nil {
		return x.VulnServicesInfos
	}
	return nil
}

// Миша, не реализована функциональность с флагом. Как сервис admin будет знать, какие флаги валидны?
type VulnServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // Status code of the operation
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                          // Status message or additional information
	WebPort    int32  `protobuf:"varint,3,opt,name=web_port,json=webPort,proto3" json:"web_port,omitempty"`
	Ip         string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	InstanceId string `protobuf:"bytes,5,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // UUID of the instance (vulnService)
	LastCheck  int64  `protobuf:"varint,6,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`   // Timestamp of the last check
}

func (x *VulnServiceInfo) Reset() {
	*x = VulnServiceInfo{}
	mi := &file_checkerSystem_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnServiceInfo) ProtoMessage() {}

func (x *VulnServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnServiceInfo.ProtoReflect.Descriptor instead.
func (*VulnServiceInfo) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{4}
}

func (x *VulnServiceInfo) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *VulnServiceInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VulnServiceInfo) GetWebPort() int32 {
	if x != nil {
		return x.WebPort
	}
	return 0
}

func (x *VulnServiceInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *VulnServiceInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *VulnServiceInfo) GetLastCheck() int64 {
	if x != nil {
		return x.LastCheck
	}
	return 0
}

type PingVulnServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // UUID of the instance
}

func (x *PingVulnServiceRequest) Reset() {
	*x = PingVulnServiceRequest{}
	mi := &file_checkerSystem_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingVulnServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingVulnServiceRequest) ProtoMessage() {}

func (x *PingVulnServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingVulnServiceRequest.ProtoReflect.Descriptor instead.
func (*PingVulnServiceRequest) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{5}
}

func (x *PingVulnServiceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type CreateVulnServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"` // это поле должно быть optional. Так как
	Ip        string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	WebPort   int32  `protobuf:"varint,3,opt,name=web_port,json=webPort,proto3" json:"web_port,omitempty"`
}

func (x *CreateVulnServiceRequest) Reset() {
	*x = CreateVulnServiceRequest{}
	mi := &file_checkerSystem_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVulnServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVulnServiceRequest) ProtoMessage() {}

func (x *CreateVulnServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVulnServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateVulnServiceRequest) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{6}
}

func (x *CreateVulnServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CreateVulnServiceRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CreateVulnServiceRequest) GetWebPort() int32 {
	if x != nil {
		return x.WebPort
	}
	return 0
}

type CreateVulnServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Success    bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CreateVulnServiceResponse) Reset() {
	*x = CreateVulnServiceResponse{}
	mi := &file_checkerSystem_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVulnServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVulnServiceResponse) ProtoMessage() {}

func (x *CreateVulnServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVulnServiceResponse.ProtoReflect.Descriptor instead.
func (*CreateVulnServiceResponse) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{7}
}

func (x *CreateVulnServiceResponse) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateVulnServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StopVulnServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceIds []string `protobuf:"bytes,1,rep,name=instance_ids,json=instanceIds,proto3" json:"instance_ids,omitempty"`
}

func (x *StopVulnServicesRequest) Reset() {
	*x = StopVulnServicesRequest{}
	mi := &file_checkerSystem_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVulnServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVulnServicesRequest) ProtoMessage() {}

func (x *StopVulnServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVulnServicesRequest.ProtoReflect.Descriptor instead.
func (*StopVulnServicesRequest) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{8}
}

func (x *StopVulnServicesRequest) GetInstanceIds() []string {
	if x != nil {
		return x.InstanceIds
	}
	return nil
}

type StopVulnServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *StopVulnServicesResponse) Reset() {
	*x = StopVulnServicesResponse{}
	mi := &file_checkerSystem_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVulnServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVulnServicesResponse) ProtoMessage() {}

func (x *StopVulnServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkerSystem_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVulnServicesResponse.ProtoReflect.Descriptor instead.
func (*StopVulnServicesResponse) Descriptor() ([]byte, []int) {
	return file_checkerSystem_proto_rawDescGZIP(), []int{9}
}

func (x *StopVulnServicesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_checkerSystem_proto protoreflect.FileDescriptor

var file_checkerSystem_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x22, 0x3b, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12,
	0x50, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x7d, 0x0a, 0x13, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x56,
	0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11,
	0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x39, 0x0a, 0x16, 0x50,
	0x69, 0x6e, 0x67, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x56, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x3c, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x56, 0x75, 0x6c, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x70, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xee, 0x03, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x60, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b,
	0x50, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x75,
	0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x53, 0x74,
	0x6f, 0x70, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x26,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x56, 0x75, 0x6c, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x67, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x25, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x14, 0x5a, 0x12, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checkerSystem_proto_rawDescOnce sync.Once
	file_checkerSystem_proto_rawDescData = file_checkerSystem_proto_rawDesc
)

func file_checkerSystem_proto_rawDescGZIP() []byte {
	file_checkerSystem_proto_rawDescOnce.Do(func() {
		file_checkerSystem_proto_rawDescData = protoimpl.X.CompressGZIP(file_checkerSystem_proto_rawDescData)
	})
	return file_checkerSystem_proto_rawDescData
}

var file_checkerSystem_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_checkerSystem_proto_goTypes = []any{
	(*RegisterCheckerRequest)(nil),    // 0: CheckerSystem.RegisterCheckerRequest
	(*RegisterCheckerResponse)(nil),   // 1: CheckerSystem.RegisterCheckerResponse
	(*PingCheckerRequest)(nil),        // 2: CheckerSystem.PingCheckerRequest
	(*PingCheckerResponse)(nil),       // 3: CheckerSystem.PingCheckerResponse
	(*VulnServiceInfo)(nil),           // 4: CheckerSystem.VulnServiceInfo
	(*PingVulnServiceRequest)(nil),    // 5: CheckerSystem.PingVulnServiceRequest
	(*CreateVulnServiceRequest)(nil),  // 6: CheckerSystem.CreateVulnServiceRequest
	(*CreateVulnServiceResponse)(nil), // 7: CheckerSystem.CreateVulnServiceResponse
	(*StopVulnServicesRequest)(nil),   // 8: CheckerSystem.StopVulnServicesRequest
	(*StopVulnServicesResponse)(nil),  // 9: CheckerSystem.StopVulnServicesResponse
}
var file_checkerSystem_proto_depIdxs = []int32{
	4, // 0: CheckerSystem.PingCheckerResponse.VulnServicesInfos:type_name -> CheckerSystem.VulnServiceInfo
	0, // 1: CheckerSystem.CheckerSystem.RegisterChecker:input_type -> CheckerSystem.RegisterCheckerRequest
	2, // 2: CheckerSystem.CheckerSystem.PingChecker:input_type -> CheckerSystem.PingCheckerRequest
	6, // 3: CheckerSystem.CheckerSystem.CreateVulnService:input_type -> CheckerSystem.CreateVulnServiceRequest
	8, // 4: CheckerSystem.CheckerSystem.StopVulnServices:input_type -> CheckerSystem.StopVulnServicesRequest
	5, // 5: CheckerSystem.CheckerSystem.PingVulnService:input_type -> CheckerSystem.PingVulnServiceRequest
	1, // 6: CheckerSystem.CheckerSystem.RegisterChecker:output_type -> CheckerSystem.RegisterCheckerResponse
	3, // 7: CheckerSystem.CheckerSystem.PingChecker:output_type -> CheckerSystem.PingCheckerResponse
	7, // 8: CheckerSystem.CheckerSystem.CreateVulnService:output_type -> CheckerSystem.CreateVulnServiceResponse
	9, // 9: CheckerSystem.CheckerSystem.StopVulnServices:output_type -> CheckerSystem.StopVulnServicesResponse
	4, // 10: CheckerSystem.CheckerSystem.PingVulnService:output_type -> CheckerSystem.VulnServiceInfo
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_checkerSystem_proto_init() }
func file_checkerSystem_proto_init() {
	if File_checkerSystem_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checkerSystem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checkerSystem_proto_goTypes,
		DependencyIndexes: file_checkerSystem_proto_depIdxs,
		MessageInfos:      file_checkerSystem_proto_msgTypes,
	}.Build()
	File_checkerSystem_proto = out.File
	file_checkerSystem_proto_rawDesc = nil
	file_checkerSystem_proto_goTypes = nil
	file_checkerSystem_proto_depIdxs = nil
}
